class Solution {
    public boolean isValid(String s) {
        Stack<Character> stack = new Stack<Character>();
        HashMap<Character, Character> brackets = new HashMap<Character, Character>();
        brackets.put('{', '}');
        brackets.put('(', ')');
        brackets.put('[', ']');
        for(int i = 0; i < s.length(); i++){
            char current = s.charAt(i);
            if(brackets.containsKey(current)){
                stack.push(current);
            }else if(brackets.containsValue(current) && !stack.empty()){
                char popped = stack.pop();
                if(brackets.get(popped) != current)
                    return false;
            }else if(stack.empty()){
                return false;
            }
        }
        
        if(!stack.empty())
            return false;
        
        return true;
    }
}
